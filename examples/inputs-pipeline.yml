# examples/inputs-pipeline.yml
pipeline_name: S3 Object Processor with Inputs
pipeline_description: Tests pipeline inputs feature

pipeline_settings:
  stack_name_prefix: samstacks-demo-${{ inputs.deployment_env }} # Using input
  default_region: us-east-1 # Assuming a default region for the example
  inputs:
    deployment_env:
      type: string
      default: dev 
      description: "Target deployment environment (e.g., dev, staging, prod)"
    message_retention_override: # Example numeric input
      type: number
      default: "${{ env.MESSAGE_RETENTION || 7200 }}" 
      description: "SQS message retention in seconds. Overrides default."
    deploy_storage_stack: # Example boolean input
      type: boolean
      default: true
      description: "Controls whether the storage stack is deployed."

stacks:
  - id: processor
    name: Lambda Processor Stack
    description: Lambda function with SQS queue for processing S3 object upload notifications
    dir: stacks/processor/ # Relative to this manifest file
    params:
      MessageRetentionPeriod: ${{ inputs.message_retention_override }} # Using number input
      ReceiveMessageWaitTimeSeconds: 20 # Default value, can also be made an input

  - id: storage
    name: S3 Storage Stack
    description: Creates S3 bucket with SQS notification for object uploads
    dir: stacks/storage/  # Relative to this manifest file
    if: ${{ inputs.deploy_storage_stack }} # Using boolean input for conditional deployment
    params:
      NotificationQueueArn: ${{ stacks.processor.outputs.NotificationQueueArn }}
    run: |
      echo "S3 bucket deployed to environment: ${{ inputs.deployment_env }}"
      echo "Bucket Name: ${{ stacks.storage.outputs.BucketName }}"
      echo "Lambda Function ARN: ${{ stacks.processor.outputs.ProcessorFunctionArn }}"
      
      # Test the setup by uploading a test file
      echo "Testing the pipeline by uploading a test file..."
      echo "Hello from samstacks in ${{ inputs.deployment_env }}!" > /tmp/test-file-${{ inputs.deployment_env }}.txt
      s3_file_url="s3://${{ stacks.storage.outputs.BucketName }}/test-file-${{ inputs.deployment_env }}.txt"
      aws s3 cp /tmp/test-file-${{ inputs.deployment_env }}.txt "$s3_file_url"
      echo "Test file uploaded. Check CloudWatch logs for the Lambda function."
      rm /tmp/test-file-${{ inputs.deployment_env }}.txt 
      aws s3 rm "$s3_file_url"
pipeline_name: Multi-Environment S3 Processor
pipeline_description: |
  Demonstrates the new external configuration feature that allows a single 
  pipeline to deploy to multiple environments using dynamically generated 
  external SAM config files.
  
  This example shows how to:
  - Use template substitution in config paths for multi-environment deployment
  - Generate external SAM configuration files that can be used independently 
  - Deploy the same stack code with different configurations per environment
  - Maintain clean stack directories without generated config files

pipeline_settings:
  stack_name_prefix: multi-demo-${{ inputs.environment }}-
  default_region: ${{ env.AWS_REGION || 'us-west-2' }}
  
  # Global SAM configuration that will be used as base for external configs
  default_sam_config:
    version: 0.1
    default:
      global:
        parameters:
          beta_features: false
      deploy:
        parameters:
          capabilities: CAPABILITY_IAM
          confirm_changeset: false
          resolve_s3: true
          tags: |
            Environment=${{ inputs.environment }}
            ManagedBy=samstacks
            Project=MultiEnvironmentProcessor
            ConfigMode=external
  
  inputs:
    environment:
      type: string
      default: dev
      description: "Target deployment environment (dev, staging, prod)"
    
    log_level:
      type: string
      default: ${{ inputs.environment == 'prod' && 'WARN' || 'DEBUG' }}
      description: "Logging level for Lambda functions"
      
    enable_xray:
      type: boolean
      default: ${{ inputs.environment == 'prod' }}
      description: "Enable X-Ray tracing (recommended for production)"

stacks:
  - id: processor
    name: Lambda Processor Stack
    description: Lambda function with SQS queue for processing S3 object upload notifications
    dir: stacks/processor/
    config: configs/${{ inputs.environment }}/processor/
    params:
      Environment: ${{ inputs.environment }}
      LogLevel: ${{ inputs.log_level }}
      EnableXrayTracing: ${{ inputs.enable_xray }}
      MaxRetries: ${{ inputs.environment == 'prod' && '5' || '3' }}
    sam_config_overrides:
      default:
        deploy:
          parameters:
            parameter_overrides:
              - ProcessorTimeout=${{ inputs.environment == 'prod' && '30' || '15' }}
    
  - id: storage
    name: S3 Storage Stack  
    description: Creates S3 bucket with SQS notification for object uploads
    dir: stacks/storage/
    config: configs/${{ inputs.environment }}/storage/
    params:
      NotificationQueueArn: ${{ stacks.processor.outputs.NotificationQueueArn }}
      Keywords: ${{ stacks.processor.outputs.Keywords }}
      S3StorageClass: ${{ inputs.environment == 'prod' && 'STANDARD' || 'STANDARD_IA' }}
      EnableVersioning: ${{ inputs.environment == 'prod' }}
      BackupRetentionDays: ${{ inputs.environment == 'prod' && '365' || '30' }}
    sam_config_overrides:
      default:
        deploy:
          parameters:
            # Environment-specific S3 configuration
            parameter_overrides:
              - BucketEncryption=${{ inputs.environment == 'prod' && 'AES256' || 'NONE' }}
    run: |
      echo "‚úÖ Multi-environment deployment completed for: ${{ inputs.environment }}"
      echo ""
      echo "üìÇ External configs generated:"
      echo "   - configs/${{ inputs.environment }}/processor.yaml"
      echo "   - configs/${{ inputs.environment }}/storage.yaml"
      echo ""
      echo "üîß You can now deploy directly with SAM CLI:"
      echo "   sam deploy --config-file configs/${{ inputs.environment }}/processor.yaml"
      echo "   sam deploy --config-file configs/${{ inputs.environment }}/storage.yaml"
      echo ""
      echo "üìä Environment-specific configuration:"
      echo "   - Log Level: ${{ inputs.log_level }}"
      echo "   - X-Ray Tracing: ${{ inputs.enable_xray }}"
      echo "   - Storage Class: ${{ inputs.environment == 'prod' && 'STANDARD' || 'STANDARD_IA' }}"
      echo "   - Bucket Versioning: ${{ inputs.environment == 'prod' }}"

summary: |
  # üéâ Multi-Environment Deployment Complete!
  
  Your **${{ inputs.environment }}** environment has been deployed using external configuration files.

  ## üìÅ Generated External Configurations

  The following external SAM configuration files have been created and can be used independently:

  ### Processor Configuration
  ```bash
  # Location: configs/${{ inputs.environment }}/processor.yaml
  sam build --config-file configs/${{ inputs.environment }}/processor.yaml
  sam deploy --config-file configs/${{ inputs.environment }}/processor.yaml
  ```

  ### Storage Configuration  
  ```bash
  # Location: configs/${{ inputs.environment }}/storage.yaml
  sam build --config-file configs/${{ inputs.environment }}/storage.yaml
  sam deploy --config-file configs/${{ inputs.environment }}/storage.yaml
  ```

  ## üöÄ Deploy to Different Environments

  ### Development
  ```bash
  samstacks deploy examples/multi-pipeline.yml --input environment=dev
  ```

  ### Staging
  ```bash
  samstacks deploy examples/multi-pipeline.yml --input environment=staging
  ```

  ### Production
  ```bash
  samstacks deploy examples/multi-pipeline.yml --input environment=prod
  ```

  ## üìä Environment Configuration Summary

  | Setting | Value |
  |---------|-------|
  | **Environment** | `${{ inputs.environment }}` |
  | **AWS Region** | `${{ pipeline.settings.default_region }}` |
  | **Log Level** | `${{ inputs.log_level }}` |
  | **X-Ray Tracing** | `${{ inputs.enable_xray }}` |
  | **Storage Class** | `${{ inputs.environment == 'prod' && 'STANDARD' || 'STANDARD_IA' }}` |
  | **Bucket Versioning** | `${{ inputs.environment == 'prod' }}` |

  ## üèóÔ∏è Deployed Infrastructure

  ### Processing Stack
  - **Lambda Function**: `${{ stacks.processor.outputs.ProcessorFunctionName }}`
  - **SQS Queue**: `${{ stacks.processor.outputs.NotificationQueueName }}`

  ### Storage Stack
  - **S3 Bucket**: `${{ stacks.storage.outputs.BucketName }}`
  - **Storage Class**: `${{ inputs.environment == 'prod' && 'STANDARD' || 'STANDARD_IA' }}`

  ## ‚ú® Key Benefits of External Configs

  1. **üîÑ Single Pipeline, Multiple Environments**: One pipeline definition supports all environments
  2. **üì¶ Standalone Configs**: Generated configs work independently with SAM CLI
  3. **üßπ Clean Stack Directories**: No generated files in your stack source code
  4. **üîó GitOps Ready**: External configs can be committed and versioned
  5. **‚ö° Direct SAM CLI Usage**: Skip samstacks for quick deployments

  ---

  **üéØ Success!** Your **${{ inputs.environment }}** environment is ready with external configuration support! 